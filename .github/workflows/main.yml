name: Java CI with Maven (Unit치rios, Integra칞칚o e SonarCloud)
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: event_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do reposit칩rio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necess치rio para an치lise precisa no SonarCloud

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Criar schema no banco de dados para testes unit치rios
        run: |
          sudo apt-get install -y postgresql-client
          PGPASSWORD=postgres psql -h localhost -U postgres -d event_db -c "CREATE SCHEMA IF NOT EXISTS event_system;"

      - name: Configurar vari치veis de ambiente para testes unit치rios
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/event_db" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=postgres" >> $GITHUB_ENV

      - name: Compilar projeto
        working-directory: ./event-system
        run: mvn -B clean compile

      - name: Executar testes unit치rios com cobertura
        working-directory: ./event-system
        run: mvn test jacoco:report

      - name: Upload do relat칩rio de cobertura de testes unit치rios
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-unit-test-report
          path: |
            event-system/target/site/jacoco/
            event-system/target/jacoco.exec
            event-system/target/jacoco-report.xml

      - name: Derrubar PostgreSQL da pipeline (Para evitar conflito com Testcontainers)
        run: docker stop $(docker ps -q --filter ancestor=postgres:15) || true

      - name: Executar testes de integra칞칚o (Testcontainers)
        working-directory: ./event-system
        run: mvn failsafe:integration-test failsafe:verify

      - name: Verificar e empacotar (caso todos os testes passem)
        if: success()
        working-directory: ./event-system
        run: mvn -B package -DskipTests

      - name: Upload do artefato JAR
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: event-system-jar
          path: event-system/target/event-system-*.jar

      # 游댠 **Adicionando SonarCloud**
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 游댌 Analisar com SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./event-system
        run: mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=hnqe_event-system
